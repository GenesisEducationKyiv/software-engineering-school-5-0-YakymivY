{
  "name": "weather-app",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "postbuild": "[ -d apps/weather-app/public ] && cp -r apps/weather-app/public dist/apps/weather-app/public || echo 'No public directory to copy'",
    "format": "prettier --write \"apps/**/*.ts\" \"libs/**/*.ts\"",
    "start:mail": "node dist/apps/mail/src/main",
    "start:weather-app": "node dist/apps/weather-app/src/main",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/apps/weather-app/src/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\"",
    "lint:fix": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "NODE_ENV=test npm run test:mail && npm run test:weather-app",
    "test:mail": "NODE_ENV=test jest --config apps/mail/jest.config.ts",
    "test:weather-app": "NODE_ENV=test jest --config apps/weather-app/jest.config.ts",
    "test:integration:start": "docker compose -f docker-compose.test.yml --env-file apps/weather-app/.env.test up test_db test_redis mail -d --wait",
    "test:integration:start:git": "docker compose -f docker-compose.test.yml --env-file apps/weather-app/.env.test up test_redis mail -d --wait",
    "test:integration": "NODE_ENV=test DB_HOST=localhost REDIS_HOST=localhost PROTO_PATH=../../../../proto/mail.proto MS_HOST=localhost jest --runInBand --forceExit --config jest.integration.json",
    "test:integration:stop": "docker compose -f docker-compose.test.yml down -v",
    "test:e2e:start": "DB_PORT=5433 docker compose -f docker-compose.test.yml up -d --wait",
    "test:e2e": "NODE_ENV=test DB_PORT=5433 npx playwright test --config playwright.config.ts",
    "test:e2e:stop": "docker compose -f docker-compose.test.yml down -v",
    "test:arch": "jest test/architecture --config jest.architecture.json",
    "typeorm": "ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js",
    "migration:generate": "npm run build && typeorm migration:generate src/migrations/InitSchema -d dist/apps/weather-app/src/config/data-source.js",
    "migration:run": "typeorm migration:run -d dist/apps/weather-app/src/config/data-source.js",
    "migration:revert": "typeorm migration:revert -d dist/apps/weather-app/src/config/data-source.js",
    "proto:generate": "protoc --plugin=./node_modules/.bin/protoc-gen-ts_proto --ts_proto_out=libs/common/src/types --ts_proto_opt=nestJs=true ./proto/mail.proto"
  },
  "dependencies": {
    "@eslint/eslintrc": "^2.1.4",
    "@grpc/grpc-js": "^1.13.4",
    "@grpc/proto-loader": "^0.7.15",
    "@nestjs-modules/ioredis": "^2.0.2",
    "@nestjs/axios": "^4.0.0",
    "@nestjs/cache-manager": "^3.0.1",
    "@nestjs/common": "^11.0.0",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.1.5",
    "@nestjs/microservices": "^11.1.5",
    "@nestjs/platform-express": "^11.0.0",
    "@nestjs/schedule": "^6.0.0",
    "@nestjs/serve-static": "^5.0.3",
    "@nestjs/terminus": "^11.0.0",
    "@nestjs/typeorm": "^11.0.0",
    "@willsoto/nestjs-prometheus": "^6.0.2",
    "amqp-connection-manager": "^4.1.14",
    "amqplib": "^0.10.8",
    "axios": "^1.9.0",
    "cache-manager": "^7.0.1",
    "cache-manager-ioredis": "^2.1.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "dotenv": "^16.5.0",
    "express": "^5.1.0",
    "ioredis": "^5.6.1",
    "multer": "^1.4.5-lts.2",
    "nest-winston": "^1.10.2",
    "nodemailer": "^7.0.3",
    "pg": "^8.16.0",
    "prom-client": "^15.1.3",
    "reflect-metadata": "^0.2.0",
    "rxjs": "^7.8.2",
    "uuid": "^11.1.0",
    "winston": "^3.17.0"
  },
  "devDependencies": {
    "@nestjs/cli": "^11.0.7",
    "@nestjs/schematics": "^11.0.0",
    "@nestjs/testing": "^11.0.0",
    "@playwright/test": "^1.53.0",
    "@types/cache-manager": "^4.0.6",
    "@types/cache-manager-ioredis": "^2.0.7",
    "@types/express": "^5.0.0",
    "@types/jest": "^29.5.14",
    "@types/node": "^20.3.1",
    "@types/nodemailer": "^6.4.17",
    "@types/pg": "^8.15.4",
    "@types/supertest": "^6.0.0",
    "@typescript-eslint/eslint-plugin": "^8.33.1",
    "@typescript-eslint/parser": "^8.33.1",
    "ajv": "^6.12.6",
    "eslint": "^8.57.1",
    "eslint-config-prettier": "^9.1.0",
    "eslint-import-resolver-typescript": "^4.4.4",
    "eslint-plugin-import": "^2.31.0",
    "eslint-plugin-prettier": "^5.4.1",
    "jest": "^29.7.0",
    "playwright": "^1.53.0",
    "prettier": "^3.5.3",
    "source-map-support": "^0.5.21",
    "start-server-and-test": "^2.0.12",
    "supertest": "^7.0.0",
    "ts-jest": "^29.3.4",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "ts-proto": "^2.7.5",
    "tsarch": "^5.4.1",
    "tsconfig-paths": "^4.2.0",
    "typeorm": "^0.3.24",
    "typescript": "^5.1.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": ".",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "./coverage",
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/apps/",
      "<rootDir>/libs/"
    ],
    "moduleNameMapper": {
      "^@app/common(|/.*)$": "<rootDir>/libs/common/src/$1"
    }
  },
  "overrides": {
    "json-schema-traverse": "1.0.0"
  }
}
