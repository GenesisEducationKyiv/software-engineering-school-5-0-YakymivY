services:
  app:
    build:
      context: .
      dockerfile: apps/weather-app/Dockerfile
    ports:
      - 3000:3000
    env_file:
      - ./apps/weather-app/.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  mail:
    build:
      context: .
      dockerfile: apps/mail/Dockerfile
    ports:
      - 4000:4000
      - 4001:4001
    env_file:
      - ./apps/mail/.env
    depends_on:
      rabbitmq:
        condition: service_healthy

  db:
    image: postgres:15
    restart: always
    ports:
      - ${DB_PORT}:5432
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER} -d ${DB_NAME}']
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - pg_data:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    ports:
      - ${REDIS_PORT}:6379
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - redis_data:/data

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - ${RABBITMQ_PORT}:5672
      - ${RABBITMQ_MGMT_PORT}:15672
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
    healthcheck:
      test: ['CMD', 'rabbitmqctl', 'status']
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090

volumes:
  pg_data:
  redis_data:
